<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.nivelle.bigdata.clickhouse.mapper.UserReadBehaviorMapper">
    <resultMap id="BaseResultMap" type="com.nivelle.bigdata.clickhouse.entity.UserReadBehavior">
        <result column="user_name" jdbcType="VARCHAR" property="userName"/>
        <result column="book_id" jdbcType="INTEGER" property="bookId"/>
        <result column="chapter_id" jdbcType="VARCHAR" property="chapterId"/>
        <result column="book_type" jdbcType="INTEGER" property="bookType"/>
        <result column="read_times" jdbcType="INTEGER" property="readTimes"/>
        <result column="category_id" jdbcType="INTEGER" property="categoryId"/>
        <result column="category_name" jdbcType="VARCHAR" property="categoryName"/>
        <result column="p2" jdbcType="VARCHAR" property="p2"/>
        <result column="p16" jdbcType="VARCHAR" property="p16"/>
        <result column="ip" jdbcType="VARCHAR" property="ip"/>
        <result column="copyright_id" jdbcType="INTEGER" property="copyrightId"/>
        <result column="company_id" jdbcType="VARCHAR" property="companyId"/>
        <result column="in_co_pkg" jdbcType="INTEGER" property="inCoPkg"/>
        <result column="user_groupId" jdbcType="INTEGER" property="userGroupId"/>
        <result column="create_time" jdbcType="DATE" property="createTime"/>
    </resultMap>

    <sql id="Base_Column_List">
        user_name
        ,book_id,chapter_id,book_type,read_times,category_id,category_name,p2,p16,ip,copyright_id,company_id,in_co_pkg,user_groupId,create_time
    </sql>
    <insert id="batchSave" parameterType="com.nivelle.bigdata.clickhouse.entity.UserReadBehavior">
        INSERT INTO user_read_behavior
        (user_name,book_id,chapter_id,book_type,read_times,category_id,category_name,p2,p16,ip,copyright_id,company_id,in_co_pkg,user_groupId,create_time)
        VALUES
        <foreach collection="userReadBehaviorList" item="item" index="index" separator=",">
            (#{item.userName},#{item.bookId},#{item.chapterId},
            #{item.bookType},#{item.readTimes},#{item.categoryId},#{item.categoryName},
            #{item.p2},#{item.p16},#{item.ip},#{item.copyrightId},#{item.companyId},#{item.inCoPkg},#{item.userGroupId},#{item.createTime})
        </foreach>
    </insert>
    <insert id="save" parameterType="com.nivelle.bigdata.clickhouse.entity.UserReadBehavior">
        INSERT INTO user_read_behavior
        (user_name, book_id, chapter_id, book_type, read_times, category_id, category_name, p2, p16, ip, copyright_id,
         company_id, in_co_pkg, user_groupId, create_time)
        VALUES (#{userName}, #{bookId}, #{chapterId}, #{bookType}, #{readTimes}, #{categoryId}, #{categoryName}, #{p2},
                #{p16}, #{ip}, #{copyrightId}, #{companyId}, #{inCoPkg}, #{userGroupId}, #{createTime})
    </insert>
    <select id="selectList" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from user_read_behavior
    </select>

    <select id="getCondition" parameterType="java.util.Map" resultType="com.nivelle.bigdata.clickhouse.params.UserReadBehaviorResponse">
        select
        book_id as bookId, count (distinct(user_name)) as uv,count (user_name) as pv, sum (read_times) as sumTimes
        from user_read_behavior
        <where>
            create_time between #{startTime} and #{endTime}
            <if test="categoryIds!=null">
                and category_id in
                <foreach collection="categoryIds" item="categoryId" index="index"
                         open="(" close=")" separator=",">
                    #{categoryId}
                </foreach>
            </if>
            <if test="bookIds!=null">
                and book_id in
                <foreach collection="bookIds" item="bookId" index="index"
                         open="(" close=")" separator=",">
                    #{bookId}
                </foreach>
            </if>
            <if test="copyrightIds!=null">
                and copyright_id in
                <foreach collection="copyrightIds" item="copyrightId" index="index"
                         open="(" close=")" separator=",">
                    #{copyrightId}
                </foreach>
            </if>

            <if test="channels!=null">
                and p2 in
                <foreach collection="channels" item="channel" index="index"
                         open="(" close=")" separator=",">
                    #{channel}
                </foreach>
            </if>
            group by book_id;
        </where>
    </select>


    <select id="getConditionUnion" parameterType="java.util.Map" resultType="com.nivelle.bigdata.clickhouse.params.UserReadBehaviorResponse">
        select
        book_id as bookId, count (distinct(user_name)) as uv,count (user_name) as pv, sum (read_times) as sumTimes
        from user_read_behavior
        <where>
            create_time between #{startTime} and #{endTime}
            <if test="categoryIds!=null">
                and category_id in
                <foreach collection="categoryIds" item="categoryId" index="index"
                         open="(" close=")" separator=",">
                    #{categoryId}
                </foreach>
            </if>
            <if test="bookIds!=null">
                and book_id in
                <foreach collection="bookIds" item="bookId" index="index"
                         open="(" close=")" separator=",">
                    #{bookId}
                </foreach>
            </if>
            <if test="copyrightIds!=null">
                and copyright_id in
                <foreach collection="copyrightIds" item="copyrightId" index="index"
                         open="(" close=")" separator=",">
                    #{copyrightId}
                </foreach>
            </if>

            <if test="channels!=null">
                and p2 in
                <foreach collection="channels" item="channel" index="index"
                         open="(" close=")" separator=",">
                    #{channel}
                </foreach>
            </if>
            group by book_id;
        </where>
    </select>
</mapper>
