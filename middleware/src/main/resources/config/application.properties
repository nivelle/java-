application.name="middleware"
server.servlet.context-path=/middleware
## zk\u914D\u7F6E
#\u91CD\u8BD5\u6B21\u6570
curator.retryCount=2
#\u91CD\u8BD5\u95F4\u9694\u65F6\u95F4
curator.elapsedTimeMs=500
# zookeeper \u5730\u5740
#curator.connectString=docker.for.mac.localhost:2181
curator.connectString=localhost:2181
# session\u8D85\u65F6\u65F6\u95F4
curator.sessionTimeoutMs=60000
# \u8FDE\u63A5\u8D85\u65F6\u65F6\u95F4
curator.connectionTimeoutMs=500
## HBase \u914D\u7F6E
hbase.client.scanner.caching=100
hbase.client.ipc.pool.size=10
hbase.client.ipc.pool.type=RoundRobinPool
hbase.client.operation.timeout=30000
hbase.client.scanner.timeout.period=30000
hbase.rpc.timeout=1000
hbase.client.retries.number=3
hbase.client.pause=50
### kafka
spring.kafka.producer.servers=127.0.0.1:9092
spring.kafka.producer.batch.size=16
spring.kafka.producer.retries=0
spring.kafka.producer.linger=0
spring.kafka.producer.buffer-memory=33554432
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.consumer.servers=127.0.0.1:9092
spring.kafka.consumer.enable-auto-commit=false
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.group-id=test-consumer-group
##spring.kafka.consumer.zookeeper.connect=127.0.0.1:2181
spring.kafka.consumer.session.timeout=6000
spring.kafka.consumer.auto.commit.interval=100
#\u8868\u793A\u81EA\u52A8\u4ECE\u6700\u65B0\u7684\u5F00\u59CB\u6D88\u8D39
spring.kafka.consumer.auto.offset.reset=latest
spring.kafka.consumer.concurrency=2
### redis
#spring.redis.host=docker.for.mac.localhost
spring.redis.host=localhost
spring.redis.port=6379
# Redis\u6570\u636E\u5E93\u7D22\u5F15\uFF08\u9ED8\u8BA4\u4E3A0\uFF09
spring.redis.database=0
# Redis\u670D\u52A1\u5668\u8FDE\u63A5\u5BC6\u7801\uFF08\u9ED8\u8BA4\u4E3A\u7A7A\uFF09
spring.redis.password=
# \u8FDE\u63A5\u6C60\u6700\u5927\u8FDE\u63A5\u6570\uFF08\u4F7F\u7528\u8D1F\u503C\u8868\u793A\u6CA1\u6709\u9650\u5236\uFF09 \u9ED8\u8BA4 8
spring.redis.lettuce.pool.max-active=8
# \u8FDE\u63A5\u6C60\u6700\u5927\u963B\u585E\u7B49\u5F85\u65F6\u95F4\uFF08\u4F7F\u7528\u8D1F\u503C\u8868\u793A\u6CA1\u6709\u9650\u5236\uFF09 \u9ED8\u8BA4 -1
#spring.redis.lettuce.pool.max-wait=-1
# \u8FDE\u63A5\u6C60\u4E2D\u7684\u6700\u5927\u7A7A\u95F2\u8FDE\u63A5 \u9ED8\u8BA4 8
spring.redis.lettuce.pool.max-idle=8
# \u8FDE\u63A5\u6C60\u4E2D\u7684\u6700\u5C0F\u7A7A\u95F2\u8FDE\u63A5 \u9ED8\u8BA4 0
spring.redis.lettuce.pool.min-idle=0
## rabbitMQ
#spring.rabbitmq.host=docker.for.mac.localhost
spring.rabbitmq.host=localhost
spring.rabbitmq.port=5672
spring.rabbitmq.username=guest
spring.rabbitmq.password=guest
### \u4EA4\u6362\u5668/\u961F\u5217
spring.rabbitmq.fanout.exchange=fanout.nivelle
spring.rabbitmq.fanout.exchange.routingKey=fanout.nivelle.key
spring.rabbitmq.fanout.queue1=fanout.queue.1
spring.rabbitmq.fanout.queue2=fanout.queue.2
spring.rabbitmq.fanout.queue3=fanout.queue.3
spring.rabbitmq.direct.exchange=direct.exchange
spring.rabbitmq.direct.exchange.routingKey=direct.exchange.key
spring.rabbitmq.direct.queue1=direct.queue.1
spring.rabbitmq.direct.queue2=direct.queue.2
## mongodb
spring.data.mongodb.database=admin
spring.data.mongodb.username=ebook
spring.data.mongodb.password=ebook
spring.data.mongodb.host=localhost
spring.data.mongodb.port=27017
##Elasticsearch\u914D\u7F6E\u6587\u4EF6\uFF08\u5FC5\u987B\uFF09\u8BE5\u914D\u7F6E\u548CElasticsearch\u7684elasticsearch.yml\u4E2D\u7684\u914D\u7F6E\u4FE1\u606F\u6709\u5173
spring.data.elasticsearch.cluster-name=middleware
## \u4E0Ehttp \u4EA4\u4E92\u7AEF\u53E3 9200 \u548C java\u4EA4\u4E92 9300; elasticSearch head \u7AEF\u53E3 http://localhost:9100/
spring.data.elasticsearch.cluster-nodes=127.0.0.1:9300